{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "myacr": {
                "username": "",
                "password": "",
                "address": ""
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "startupOrder": 0,
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.5",
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"5671/tcp\":[{\"HostPort\":\"5671\"}],\"8883/tcp\":[{\"HostPort\":\"8883\"}],\"443/tcp\":[{\"HostPort\":\"443\"}]}}}"
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 0,
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.5",
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"5671/tcp\":[{\"HostPort\":\"5671\"}],\"8883/tcp\":[{\"HostPort\":\"8883\"}],\"443/tcp\":[{\"HostPort\":\"443\"}]}}}"
            }
          }
        },
        "modules": {
          "broker": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 1,
            "settings": {
              "image": "ausahealthcontainerregistry1.azurecr.io/flutter_broker:0.0.1"
            }
          },
          "subscriber": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 2,
            "env": {
              "HOST": {"value": "broker"}
            },
            "settings": {
              "image": "ausahealthcontainerregistry1.azurecr.io/flutter_subscriber:0.0.1"
            }
          },
          "database": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 1,
            "settings": {
              "image": "ausahealthcontainerregistry1.azurecr.io/ausa_device_database:0.0.1"
            }
          },
          "blob": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 1,
            "settings": {
              "image": "mcr.microsoft.com/azure-blob-storage:latest",
              "createOptions": "\"{\\\"Env\\\":[\\n \\\"LOCAL_STORAGE_ACCOUNT_NAME=ausablobstorage\\\",\\n    \\\"LOCAL_STORAGE_ACCOUNT_KEY=GaQ2V6M59EYWEoptNraSOA==\\\"\\n  ],\\n  \\\"HostConfig\\\":{\\n    \\\"Binds\\\":[\\n        \\\"./:/blobroot\\\"\\n    ],\\n    \\\"PortBindings\\\":{\\n      \\\"11002/tcp\\\":[{\\\"HostPort\\\":\\\"11002\\\"}]\\n    }\\n  }\\n}\""
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "sensorTofiltermodule": "FROM /messages/modules/tempSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/filtermodule/inputs/input1\")",
          "filtermoduleToIoTHub": "FROM /messages/modules/filtermodule/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "filtermodule": {
      "properties.desired": {
        "TemperatureThreshold": 25
      }
    },
    "blob":{
  "properties.desired": {
    "deviceAutoDeleteProperties": {
      "deleteOn": false,
      "deleteAfterMinutes": 240,
      "retainWhileUploading": true
    },
    "deviceToCloudUploadProperties": {
      "uploadOn": false,
      "uploadOrder": "OldestFirst",
      "cloudStorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=<your Azure Storage Account Name>;AccountKey=<your Azure Storage Account Key>;EndpointSuffix=<your end point suffix>",
      "storageContainersForUpload": {
        "ausaedgestorage": {
          "target": "ausacontainer"
        }
      },
      "deleteAfterUpload": false
    }
  }
}
  }
}
